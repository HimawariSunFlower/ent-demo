// Code generated by ent, DO NOT EDIT.

package pet

import (
	"time"
)

const (
	// Label holds the string label denoting the pet type in the database.
	Label = "pet"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeMaster holds the string denoting the master edge name in mutations.
	EdgeMaster = "master"
	// Table holds the table name of the pet in the database.
	Table = "pets"
	// MasterTable is the table that holds the master relation/edge.
	MasterTable = "pets"
	// MasterInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	MasterInverseTable = "users"
	// MasterColumn is the table column denoting the master relation/edge.
	MasterColumn = "master_name"
)

// Columns holds all SQL columns for pet fields.
var Columns = []string{
	FieldID,
	FieldAge,
	FieldName,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "pets"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"master_name",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
